# https://www.nginx.com/blog/using-free-ssltls-certificates-from-lets-encrypt-with-nginx/#:~:text=certbot%20can%20automatically%20configure%20NGINX,is%20www.example.com.
server {
    # root /var/www/registry;
    server_name devops24ir.cf www.devops24ir.cf ;

    # listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/devops24ir.cf/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/devops24ir.cf/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


location /v2 {
    # Do not allow connections from docker 1.5 and earlier
    # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
    if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
      return 404;
    }
    client_max_body_size 16384m;
    proxy_pass                          http://registry_services:5000;
    proxy_set_header  Host              $http_host;   # required for docker client's sake
    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_read_timeout                  900;
    }
    location / {
    # Do not allow connections from docker 1.5 and earlier
    # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
    if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
      return 404;
    }
    client_max_body_size 16384m;
    proxy_pass                          http://registry_ui:80;
    proxy_set_header  Host              $http_host;   # required for docker client's sake
    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_read_timeout                  900;
    }
}

server {
    if ($host = www.devops24ir.cf) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = devops24ir.cf) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    # listen [::]:80 default_server;
    server_name devops24ir.cf www.devops24ir.cf;
    return 404; # managed by Certbot

}

